/*
 * File: app/controller/ArtistDetail.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.2.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('TMF14.controller.ArtistDetail', {
    extend: 'Ext.app.Controller',

    config: {
        routes: {
            'artistDetail': 'showArtistDetail'
        },

        control: {
            "container#artistMain": {
                initialize: 'onArtistMainInitialize'
            },
            "container#artistDetail": {
                activate: 'onArtistDetailActivate',
                hide: 'onArtistDetailHide',
                show: 'onArtistDetailShow'
            },
            "button#saveArtistButton": {
                tap: 'onSaveArtistButtonTap'
            },
            "button#closeArtistInfoButton": {
                tap: 'onCloseArtistInfoButtonTap'
            },
            "button#playButton": {
                tap: 'onPlayButtonTap'
            },
            "button#backButton": {
                tap: 'onBackButtonTap'
            }
        }
    },

    onArtistMainInitialize: function(component, eOpts) {
        component.element.on('tap', this.addArtistMainTapListener(), this, {single: true});
    },

    onArtistDetailActivate: function(newActiveItem, container, oldActiveItem, eOpts) {
        setTimeout(function() {
            Ext.ComponentQuery.query('#artistName')[0].show();
        }, 500);
    },

    onSaveArtistButtonTap: function(button, e, eOpts) {
        var store = Ext.getStore('savedArtists'),
            artist = button.artistToSave,
            recStore,
            index,
            record;

        switch(artist.DayNumber) {
            case "Day1":
            recStore = Ext.getStore('thursdayArtists');
            break;
            case "Day2":
            recStore = Ext.getStore('fridayArtists');
            break;
            case "Day3":
            recStore = Ext.getStore('saturdayArtists');
            break;
            case "Day4":
            recStore = Ext.getStore('sundayArtists');
            break;
            default: console.log('default');
        }

        if(button.getText() === 'Save') {

            index = recStore.findExact('track_id', artist.track_id);
            record = recStore.getAt(index);

            record.set('saved', true);
            store.add(record);
            store.sync();
            //button.setUi('confirm');
            button.setText('Saved');
            //console.log(record);

        } else {

            //button.setUi('action');
            button.setText('Save');
            // Delete the artist...

            //console.log(entry);
            //entry.erase();
            index = recStore.findExact('track_id', artist.track_id);
            record = recStore.getAt(index);

            var savedIndex = store.findExact('track_id', artist.track_id),
                savedRecord = store.getAt(index);

            record.set('saved', false);
            //console.log(savedRecord);
            store.remove(savedRecord);
            store.sync();

            TMF14.app.refreshLists();

            // reload menu store to update saved count...
            Ext.getStore('menu').load();


        }
    },

    onCloseArtistInfoButtonTap: function(button, e, eOpts) {
        var artistInfoContainer = Ext.ComponentQuery.query('#artistInfoContainer')[0];
        artistInfoContainer.hide();

        this.addArtistMainTapListener();
    },

    onPlayButtonTap: function(button, e, eOpts) {
        var main = Ext.getCmp('main');

        if (typeof main.artistPlaying === 'undefined') {

            main.artistPlaying = {track_id: ''};
        }

        if(button.artist.track_id !== main.artistPlaying.track_id) {

            if(typeof main.sound !== 'undefined') {
                main.sound.stop();
            }

            this.playArtist(button.artist);

        } else {

            if(main.sound.paused) {

                main.sound.play();

            } else {

                main.sound.pause();
            }
        }
    },

    onArtistDetailHide: function(component, eOpts) {
        Ext.ComponentQuery.query('#menuButton')[0].show({type: 'fade'});
        Ext.ComponentQuery.query('#backButton')[0].hide();

        component.destroy();
    },

    onArtistDetailShow: function(component, eOpts) {
        Ext.ComponentQuery.query('#menuButton')[0].hide();
        Ext.ComponentQuery.query('#backButton')[0].show({type: 'slide', direction:'right'});
    },

    onBackButtonTap: function(button, e, eOpts) {
        var artistInfoContainer = Ext.ComponentQuery.query('#artistInfoContainer')[0],
            main = Ext.getCmp('main');

        button.hide();

        if(!artistInfoContainer.isHidden()) {
            artistInfoContainer.hide();
            this.addArtistMainTapListener();
        }
        //main.animateActiveItem(main);
        //Ext.ComponentQuery.query('#artistDetail')[0].hide();
        //console.log(button);
        this.redirectTo(button.dayNumber);
    },

    showArtistDetail: function() {
        var artistDetail = Ext.ComponentQuery.query('#artistInfo')[0] || Ext.create('TMF14.view.ArtistDetail'),
            main = Ext.getCmp('main');

        //console.log(main.artistInfo);
        TMF14.app.setArtistInfo(main.artistInfo);

        //Ext.Viewport.setActiveItem(artistDetail);

        main.setActiveItem(artistDetail);
    },

    playArtist: function(artist) {
        var main = Ext.getCmp('main'),
            loading = Ext.DomQuery.select('.loading')[0],
            me = this;

        main.artistPlaying = artist;
        SC.initialize({client_id: 'df942240e3e63f8e23596df0893eab2a'});

        var setActive = Ext.DomQuery.select('.elapsed')[0];
        setActive.className = setActive.className + ' playing';

        SC.stream("/tracks/"+artist.track_id, function(sound){
            //soundManager.html5Only = true;
            main.sound = sound;
            //console.log(sound);
            sound.play({
                //multiShotEvents: false,
                whileloading: function() {

                    main.sound.percentLoaded = Math.floor(sound.bytesLoaded / sound.bytesTotal * 100);


                    if(typeof loading !== 'undefined') {
                        loading.style.width = percentLoaded+'%';
                    }

                },
                whileplaying: function() {
                    //currentlyPlayingHeader.setHtml('<b>Playing:</b>');
                    //button.setHtml('<img src="img/pause3.png" height="80px" />');
                    //if (button.parent !== null) {
                    //    button.parent.setMasked(false);
                    // }
                    var elapsed = Ext.DomQuery.select('.playing')[0]

                    main.sound.percentElapsed = Math.floor(sound.position / sound.duration * 100);

                    if(typeof elapsed !== 'undefined') {
                        elapsed.style.width = main.sound.percentElapsed+'%';
                    }
                    //elapsed.setWidth(percentElapsed+'%');
                },
                onfinish: function() {
                    //button.setHtml('<img src="img/play3.png" height="80px" />');
                    //var nextTrackInfo = Ext.ComponentQuery.query('#playButton')[button.config.order + 1];
                    console.log(me.getNextTrack(artist));


                }
            });

        });

    },

    getNextTrack: function(artist) {
        var store = '';

        if(artist.DayNumber === "Day1") {
            store = Ext.getStore('thursdayArtists');

        } else if (artist.DayNumber === "Day2") {

            store = Ext.getStore('fridayArtists');

        } else if (artist.DayNumber === "Day3") {

            store = Ext.getStore('saturdayArtists');

        } else if (artist.DayNumber === "Day4") {

            store = Ext.getStore('sundayArtists');

        }

        var index = store.findExact('track_id', artist.track_id),
            nextArtist = store.getAt(index +1);
        return nextArtist.data;
    },

    addArtistMainTapListener: function() {

        var artistMain = Ext.ComponentQuery.query('#artistMain')[0];

        setTimeout(function(){
            artistMain.element.on('tap', function() {
                var artistInfoContainer = Ext.ComponentQuery.query('#artistInfoContainer')[0];
                artistInfoContainer.show();
            }, this, {single: true});
            },500);
    }

});